#pragma checksum "C:\Users\Fabian\Desktop\Casino\Views\Home\Blackjack.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2cb1fc78209bf9e8cfafa11db76d7ddfcfa90ff9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Blackjack), @"mvc.1.0.view", @"/Views/Home/Blackjack.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Blackjack.cshtml", typeof(AspNetCore.Views_Home_Blackjack))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Fabian\Desktop\Casino\Views\_ViewImports.cshtml"
using Casino;

#line default
#line hidden
#line 2 "C:\Users\Fabian\Desktop\Casino\Views\_ViewImports.cshtml"
using Casino.Models;

#line default
#line hidden
#line 3 "C:\Users\Fabian\Desktop\Casino\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2cb1fc78209bf9e8cfafa11db76d7ddfcfa90ff9", @"/Views/Home/Blackjack.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e774cbbaa6a2008077596e426dd893a724de106d", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Blackjack : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Bet>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", new global::Microsoft.AspNetCore.Html.HtmlString("Home"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control col-2"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(12, 37, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n");
            EndContext();
            BeginContext(49, 204, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2cb1fc78209bf9e8cfafa11db76d7ddfcfa90ff94278", async() => {
                BeginContext(55, 191, true);
                WriteLiteral("\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Blackjack</title>\r\n    <link rel=\"stylesheet\" href=\"css/blackstyle.css\">\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(253, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(255, 9061, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2cb1fc78209bf9e8cfafa11db76d7ddfcfa90ff95668", async() => {
                BeginContext(261, 7378, true);
                WriteLiteral(@"
    <script>
        $(document).ready(function(){
            let suits = [""Spades"", ""Hearts"", ""Diamonds"", ""Clubs""];
            let stringval = [""Ace"", ""2"", ""3"", ""4"", ""5"", ""6"", ""7"", ""8"", ""9"", ""10"", ""Jack"", ""C"", ""Queen"", ""King""]

            var cardValue = {
                ""Ace"": 11,
                ""2"": 2,
                ""3"": 3,
                ""4"": 4,
                ""5"": 5,
                ""6"": 6,
                ""7"": 7,
                ""8"": 8,
                ""9"": 9,
                ""10"": 10,
                ""Jack"": 10,
                ""Queen"": 10,
                ""King"": 10
            };

            function Evaluate(){
                let sum = 0;

                for(i = 1; i < playerblackjack.length; i++)
                {
                    sum += cardValue
                }
                if (sum < 21)
            }
            
            var deck;
            var dealerblackjack;
            var playerblackjack;

            //this will create the deck");
                WriteLiteral(@" of card from the var above
            function Deck(){
                deck = [];
                let frontspade = ""&#127137;""
                let frontheart = ""&#127153;""
                let frontdiamond = ""&#127169;""
                let frontclub = ""&#127185;""
                let Val = 1;

                    for(var x = 0; x < stringval.length; x++)
                    {
                        var card = {Stringval:stringval[x],Suit:suits[0], Value:Val, Back:""&#127136;"", Front:frontspade};
                        deck.push(card);
                        frontspade = ""&#1271""+(37+Val)+"";"";
                        Val++;
                    }
                    deck.splice(11,1)
                    Val = 1;
                    for(var x = 0; x < stringval.length; x++)
                    {
                        var card = {StringVal:stringval[x],Suit:suits[1], Value:Val, Back: ""&#127136;"", Front:frontheart};
                        deck.push(card);
                        fronthea");
                WriteLiteral(@"rt = ""&#1271""+(53+Val)+"";""; 
                        Val++;
                    }
                    deck.splice(24,1)
                    Val = 1;
                    for(var x = 0; x < stringval.length; x++)
                    {
                        var card = {StringVal:stringval[x],Suit:suits[2], Value:Val, Back: ""&#127136;"", Front:frontdiamond};
                        deck.push(card);
                        frontdiamond = ""&#1271""+(69+Val)+"";""; 
                        Val++;
                    }
                    deck.splice(37,1)
                    Val = 1;
                    for(var x = 0; x < stringval.length; x++)
                    {
                        var card = {StringVal:stringval[x],Suit:suits[3], Value:Val, Back: ""&#127136;"", Front:frontclub};
                        deck.push(card);
                        frontclub = ""&#1271""+(85+Val)+"";""; 
                        Val++;
                    }
                    deck.splice(50,1)
                Shuffl");
                WriteLiteral(@"e();
            }

            function clearhands()
            {
                dealerblackjack = [];
                playerblackjack = [];
            }

            function Deal()
            {
                return deck.pop();
            }
            //this will shuffle the deck of cards
            function Shuffle()
            {
                for(var i = 0; i < 1000; i++)
                {
                    var location1 = Math.floor((Math.random() * deck.length));
                    var location2 = Math.floor((Math.random() * deck.length));
                    var temp = deck[location1];

                    deck[location1] = deck[location2]
                    deck[location2] = temp;
                }
            }

            function DealBlackJack()
            {
                console.log(""is this working"")
                Deck();
                clearhands();
                
                let temp1 = Deal()
                let temp2 = Deal()
   ");
                WriteLiteral(@"             let temp3 = Deal()
                let temp4 = Deal()

                $(""#playercard1"").html('<h1>'+ temp1.Front +'</h1>');
                $(""#playercard2"").html('<h1>'+ temp2.Front +'</h1>');
                $(""#dealercard1"").html('<h1>'+ temp3.Back +'</h1>');
                $(""#dealercard2"").html('<h1>'+ temp4.Front +'</h1>');
                playerblackjack.push(temp1);
                playerblackjack.push(temp2);
                dealerblackjack.push(temp3);
                dealerblackjack.push(temp4);

            }
            $('#Bet').on('click',function(){
                $('.dealbutton').html(""<button style='button' class='btn btn-secondary' id='Deal'>Deal</button>"");
                $("".bet"").html("""");

                    $(""#Deal"").on('click',function(){
                        DealBlackJack();
                        $("".dealbutton"").html("""");
                        $("".staybutton"").html(""<button style='button' class='btn btn-secondary' id='Stay'>Stay</button>");
                WriteLiteral(@""");
                        $("".hitbutton"").html(""<button style='button' class='ml-2 btn btn-secondary' id='Hit'>Hit</button>"");

                        $(""#Hit"").click(function(){
                            let temp5 = Deal();
                            $("".hitbutton"").html("""");
                            $("".hitbutton"").html(""<button style='button' class='ml-2 btn btn-secondary' id='Hit'>Hit</button>"");
                            $(""#playercard3"").html('<h1>'+ temp5.Front +'</h1>')

                            playerblackjack.push(temp5);

                            $(""#Hit"").click(function(){
                                let temp6 = Deal();
                                $("".hitbutton"").html("""");
                                $("".hitbutton"").html(""<button style='button' class='ml-2 btn btn-secondary' id='Hit'>Hit</button>"");
                                $(""#playercard4"").html('<h1>'+ temp6.Front +'</h1>')

                                playerblackjack.push(temp6);

     ");
                WriteLiteral(@"                           $(""#Hit"").click(function(){
                                    let temp7 = Deal();
                                    $("".hitbutton"").html("""");
                                    $("".hitbutton"").html(""<button style='button' class='ml-2 btn btn-secondary' id='Hit'>Hit</button>"");
                                    $(""#playercard5"").html('<h1>'+ temp7.Front +'</h1>')

                                    playerblackjack.push(temp7);

                                    $(""#Hit"").click(function(){
                                        let temp8 = Deal();
                                        $("".hitbutton"").html("""");
                                        $("".hitbutton"").html(""<button style='button' class='ml-2 btn btn-secondary' id='Hit'>Hit</button>"");
                                        $(""#playercard6"").html('<h1>'+ temp8.Front +'</h1>')

                                        playerblackjack.push(temp8);
                                    });
        ");
                WriteLiteral("                        });\r\n                            });\r\n                        });\r\n                    });\r\n            });\r\n        });\r\n    </script>\r\n    <h1 class=\"text-center\">Welcome to Blackjack ");
                EndContext();
                BeginContext(7640, 38, false);
#line 188 "C:\Users\Fabian\Desktop\Casino\Views\Home\Blackjack.cshtml"
                                            Write(Context.Session.GetString("FirstName"));

#line default
#line hidden
                EndContext();
                BeginContext(7678, 30, true);
                WriteLiteral("</h1>\r\n    <h3>Your Balance ($");
                EndContext();
                BeginContext(7709, 35, false);
#line 189 "C:\Users\Fabian\Desktop\Casino\Views\Home\Blackjack.cshtml"
                  Write(Context.Session.GetInt32("Balance"));

#line default
#line hidden
                EndContext();
                BeginContext(7744, 473, true);
                WriteLiteral(@")</h3>
    <div class=""blackjackcontainer"">
        <div class=""body text-center"">
            <h3 class=""text-white dealertext"">Dealers Hand</h3>
            <div class=""row DealerHand"" id=""Dealer"">
                <div class=""ml-5 text-white col-1 Cards"" id=""dealercard1""></div>
                <div class=""text-white col-1 Cards"" id=""dealercard2""></div>
                <div class=""col-2""></div>
            </div>
            <h3 class=""text-white playertext"">");
                EndContext();
                BeginContext(8218, 38, false);
#line 198 "C:\Users\Fabian\Desktop\Casino\Views\Home\Blackjack.cshtml"
                                         Write(Context.Session.GetString("FirstName"));

#line default
#line hidden
                EndContext();
                BeginContext(8256, 796, true);
                WriteLiteral(@"'s Hand</h3>
            <div class=""row PlayerHand"" id=""Player"">
                <div class=""ml-5 text-white col-1 Cards"" id=""playercard1""></div>
                <div class=""text-white col-1 Cards"" id=""playercard2""></div>
                <div class=""text-white col-1 Cards"" id=""playercard3""></div>
                <div class=""text-white col-1 Cards"" id=""playercard4""></div>
                <div class=""text-white col-1 Cards"" id=""playercard5""></div>
                <div class=""text-white col-1 Cards"" id=""playercard6""></div>
                <div class=""col-2""></div>
            </div>
        </div>
        <div class=""buttons row text-center"">
            <div class=""bet"">
                <button style=""button"" class=""btn btn-secondary"" id=""Bet"">Bet</button>
                ");
                EndContext();
                BeginContext(9052, 76, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "2cb1fc78209bf9e8cfafa11db76d7ddfcfa90ff916363", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
#line 212 "C:\Users\Fabian\Desktop\Casino\Views\Home\Blackjack.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.BetAmount);

#line default
#line hidden
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(9128, 181, true);
                WriteLiteral("\r\n            </div>\r\n            <div class=\"staybutton\"></div>\r\n            <div class=\"dealbutton\"></div>\r\n            <div class=\"hitbutton\"></div>\r\n        </div>\r\n    </div>\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9316, 10, true);
            WriteLiteral("\r\n</html> ");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Bet> Html { get; private set; }
    }
}
#pragma warning restore 1591
